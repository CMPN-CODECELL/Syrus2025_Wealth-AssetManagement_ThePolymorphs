{
  "_id": "7d210ec2-1d19-4454-9ee0-29013bcd07cc",
  "aiPersonaId": "8c1f2df4-2053-4020-8cb8-3b77757a6f4d",
  "integrationId": "ma-goal-based-investment-planner-7356-primary-workflow-for-goal-based-investment-planner",
  "isMiniAgentPrimaryWorkflow": true,
  "name": "Primary Workflow for Goal Based Investment Planner ",
  "publisherAccountId": "c7fc4684-139f-4cf7-a9e5-10f08cfed9b0",
  "startTaskId": "4733e24a-44ba-46be-803a-38ab0007d95f",
  "status": "Active",
  "tasks": [
    {
      "_id": "4733e24a-44ba-46be-803a-38ab0007d95f",
      "type": "PassThrough",
      "config": {
        "name": "Pass Through",
        "description": "Pass through the input to the output"
      },
      "transitions": [
        {
          "_id": "174d5795-eea3-4f61-a54f-ba1a1a8880ff-4733e24a-44ba-46be-803a-38ab0007d95f",
          "nextTask": "174d5795-eea3-4f61-a54f-ba1a1a8880ff",
          "name": "If query doesnt exists",
          "rules": [
            {
              "type": "any",
              "operator": "notExists",
              "path": "$output.query"
            }
          ]
        },
        {
          "_id": "c921224e-2508-4d75-a746-02289e3b6180-4733e24a-44ba-46be-803a-38ab0007d95f",
          "nextTask": "c921224e-2508-4d75-a746-02289e3b6180",
          "name": "If intents are already classified",
          "rules": [
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.intents"
            },
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.query"
            }
          ]
        },
        {
          "_id": "4733e24a-44ba-46be-803a-38ab0007d95f-ea2ff896-8dbf-4f2f-8145-fd017d9390ee",
          "name": "If query exists",
          "nextTask": "ea2ff896-8dbf-4f2f-8145-fd017d9390ee",
          "rules": [
            {
              "type": "any",
              "operator": "exists",
              "path": "$output.query"
            },
            {
              "type": "any",
              "operator": "notExists",
              "path": "$output.intents"
            }
          ]
        }
      ],
      "globalVariables": [
        {
          "name": "query",
          "referencePath": "$input.query"
        },
        {
          "name": "rawQuery",
          "referencePath": "$input.rawQuery"
        },
        {
          "name": "conversationId",
          "referencePath": "$input.conversationId"
        }
      ]
    },
    {
      "_id": "174d5795-eea3-4f61-a54f-ba1a1a8880ff",
      "type": "Input",
      "config": {
        "name": "User Input",
        "description": "Get user input",
        "type": "string"
      },
      "transitions": [
        {
          "_id": "174d5795-eea3-4f61-a54f-ba1a1a8880ff-ea2ff896-8dbf-4f2f-8145-fd017d9390ee",
          "name": "Default",
          "nextTask": "ea2ff896-8dbf-4f2f-8145-fd017d9390ee"
        }
      ],
      "globalVariables": [
        {
          "name": "query",
          "referencePath": "$output.userInput"
        },
        {
          "name": "rawQuery",
          "referencePath": "$output.userInput"
        },
        {
          "name": "selfLoopMiniAgent",
          "referencePath": "true"
        }
      ]
    },
    {
      "_id": "ea2ff896-8dbf-4f2f-8145-fd017d9390ee",
      "type": "Loader",
      "config": {
        "name": "Loader",
        "description": "Display loader message",
        "type": "loader",
        "text": "Just a moment... identifying the best approach to assist you."
      },
      "transitions": [
        {
          "_id": "ea2ff896-8dbf-4f2f-8145-fd017d9390ee-8176e010-3fb6-4bb0-92d8-0618fa9abc14",
          "name": "Default",
          "nextTask": "8176e010-3fb6-4bb0-92d8-0618fa9abc14"
        }
      ]
    },
    {
      "_id": "8176e010-3fb6-4bb0-92d8-0618fa9abc14",
      "type": "IntentClassification",
      "config": {
        "name": "Intent Classification",
        "description": "Classify the intent of the user message",
        "modelId": "gpt-4-turbo",
        "intents": [],
        "query": "$agent.query"
      },
      "transitions": [
        {
          "_id": "8176e010-3fb6-4bb0-92d8-0618fa9abc14-c921224e-2508-4d75-a746-02289e3b6180",
          "name": "If Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intentMatched",
              "value": "true"
            }
          ],
          "nextTask": "c921224e-2508-4d75-a746-02289e3b6180"
        },
        {
          "_id": "8176e010-3fb6-4bb0-92d8-0618fa9abc14-21a15b71-abea-4ff3-9d7b-f3e1ca5d621e",
          "name": "If No Intent is Matched",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.intentMatched",
              "value": "false"
            }
          ],
          "nextTask": "21a15b71-abea-4ff3-9d7b-f3e1ca5d621e"
        }
      ]
    },
    {
      "_id": "c921224e-2508-4d75-a746-02289e3b6180",
      "type": "JSFunction",
      "config": {
        "name": "JS Function",
        "description": "Execute JS function",
        "code": "\nconst main = () => {\n    const currentExecutionId = _id;\n    const intents = agent?.icIntents?.[currentExecutionId] || input.intents;\n    const currentIndex = agent?.icLoopIndexes?.[currentExecutionId] || 0;\n    const currentIntent = intents[currentIndex] || {};\n    const { intent, task } = currentIntent;\n    const state = currentIndex === intents.length ? 'end' : 'continue'\n    const icLoopIndexes = { ...(agent?.icLoopIndexes || {}), [_id]: state === 'end' ? undefined : currentIndex + 1 };\n    const icIntents = { ...(agent?.icIntents || {}), [_id]: state === 'end' ? undefined : intents };\n    return { ...input, intent, state: currentIndex === intents.length ? 'end' : 'continue', icLoopIndexes, icIntents, query: task };\n};\n\nmain()\n"
      },
      "globalVariables": [
        {
          "referencePath": "$output.icLoopIndexes",
          "name": "icLoopIndexes"
        },
        {
          "referencePath": "$output.icIntents",
          "name": "icIntents"
        }
      ],
      "transitions": [
        {
          "_id": "c921224e-2508-4d75-a746-02289e3b6180-174d5795-eea3-4f61-a54f-ba1a1a8880ff",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            },
            {
              "type": "string",
              "operator": "equal",
              "path": "$output.state",
              "value": "end"
            }
          ],
          "nextTask": "174d5795-eea3-4f61-a54f-ba1a1a8880ff"
        }
      ]
    },
    {
      "_id": "21a15b71-abea-4ff3-9d7b-f3e1ca5d621e",
      "transitions": [
        {
          "_id": "21a15b71-abea-4ff3-9d7b-f3e1ca5d621e-174d5795-eea3-4f61-a54f-ba1a1a8880ff",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            }
          ],
          "nextTask": "174d5795-eea3-4f61-a54f-ba1a1a8880ff"
        }
      ],
      "type": "Output",
      "config": {
        "name": "Output",
        "description": "Output the response to the user",
        "type": "external",
        "text": "Unable to complete task $agent.query"
      }
    },
    {
      "_id": "a2fb634c-66ff-4753-8606-6afc6017fc4a",
      "transitions": [
        {
          "_id": "a2fb634c-66ff-4753-8606-6afc6017fc4a-174d5795-eea3-4f61-a54f-ba1a1a8880ff",
          "name": "If Self Loop",
          "rules": [
            {
              "type": "string",
              "operator": "equal",
              "path": "$agent.selfLoopMiniAgent",
              "value": "true"
            }
          ],
          "nextTask": "174d5795-eea3-4f61-a54f-ba1a1a8880ff"
        }
      ],
      "type": "Display",
      "config": {
        "name": "Display",
        "description": "Display the response to the user",
        "type": "text",
        "text": "$input.content"
      }
    }
  ],
  "type": "Conversational",
  "version": "latest"
}